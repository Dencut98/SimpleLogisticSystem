@using SimpleLogisticSystem.ViewModels.Items
@model ItemIndexViewModel

@{
    int index = 1;
}

<style>
    .indented-content {
        margin-left: 20px;
    }

    .indented-button {
        margin-left: 450px;
    }

    .btn:hover {
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        transform: translateY(-5px);
        transition: transform 0.2s, box-shadow 0.2s;
    }

    .hidden {
        display: none;
    }

    .label {
        display: inline-block;
        width: 150px; /* Adjust the width as needed */
    }

    .list-group-item {
        border-bottom: 1px solid #ddd; /* Add a bottom border to each list item */
    }

    .action-bar {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
    }

    .filter-container {
        display: flex;
        align-items: center;
    }

        .filter-container label {
            margin-right: 10px;
        }

    .dropdown-submenu {
        position: relative;
    }

        .dropdown-submenu .dropdown-menu {
            top: 0;
            right: 100%;
            margin-top: -1px;
            display: none;
        }

        .dropdown-submenu:hover .dropdown-menu {
            display: block;
        }

    .dropdown-item i {
        margin-right: 5px;
    }
</style>

<div class="container mt-4">
    <div class="row">
        <div class="col-md-12">
            <h2>Available Items</h2>
            <div class="action-bar">
                @if (User.IsInRole("admin") || User.IsInRole("inventory_manager"))
                {
                    <a href="@Url.Action("Create", "Item")" class="btn btn-primary">Add New Item</a>
                }
                else
                {
                    <h7>Only admins and inventory managers can add new items!</h7>
                }

                <!-- Filter By Dropdown -->
                <div class="dropdown">
                    <button class="btn btn-secondary dropdown-toggle" type="button" id="filterDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                        Filter By
                    </button>
                    <ul class="dropdown-menu" aria-labelledby="filterDropdown">
                        <li><a class="dropdown-item" href="#" data-filter="All">All</a></li>
                        <li class="dropdown-submenu">
                            <a class="dropdown-item" href="#" id="filterByCategory">Category</a>
                            <ul class="dropdown-menu dropdown-menu-start" id="categoryMenu">
                                @foreach (var category in Model.CategoryNames)
                                {
                                    <li><a class="dropdown-item" href="#" data-filter="@category">@category</a></li>
                                }
                            </ul>
                        </li>
                        <li><a class="dropdown-item" href="#" id="removeFiltering">Remove Filtering</a></li>
                    </ul>
                </div>
            </div>

            <!-- Itemlist -->
            <div class="scrollable-box">
                <ul id="item-list" class="list-group">
                    @if (Model.Items != null && Model.Items.Any())
                    {
                        @foreach (var item in Model.Items)
                        {
                            var isOutOfStock = item.Quantity == 0;
                            <li class="list-group-item @(isOutOfStock ? "out-of-stock" : "")" data-category="@item.ItemCategory" data-price="@item.Price" data-name="@item.ItemName" data-quantity="@item.Quantity">
                                <!-- Link to toggle collapse -->
                                <a class="text-black text-decoration-none" data-toggle="collapse" href="#itemDetails-@item.Id" role="button" aria-expanded="false" aria-controls="itemDetails-@item.Id">
                                    @index. @item.ItemName
                                </a>
                                @if (isOutOfStock)
                                {
                                    <span class="text-danger">Out of stock!</span>
                                }
                                <!-- Collapsible content -->
                                <div class="collapse mt-2 indented-content" id="itemDetails-@item.Id">
                                    <div>
                                        <span class="label"><b>ID:</b></span> @($"{item.Id}")
                                    </div>
                                    <div>
                                        <span class="label"><b>Weight:</b></span> @($"{item.Weight}kg")
                                    </div>
                                    <div>
                                        <span class="label"><b>Quantity:</b></span> @item.Quantity@(" pcs")
                                    </div>
                                    <div>
                                        <span class="label"><b>Price:</b></span> @($"{item.Price:C}")
                                    </div>
                                    <div>
                                        <span class="label"><b>Item Category:</b></span> @item.ItemCategory
                                    </div>
                                    <div class="indented-button">
                                        @if (User.IsInRole("admin") || User.IsInRole("inventory_manager"))
                                        {
                                            <a href="@Url.Action("Edit", "Item", new { id = item.Id })" class="btn btn-secondary">Edit</a>
                                            <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#confirmDelete-@item.Id">Delete</button>
                                        }
                                        <button type="button" class="btn btn-success" data-bs-toggle="collapse" data-bs-target="#addToWarehouse-@item.Id" @(isOutOfStock ? "disabled" : "")>Add to Warehouse</button>
                                        <div class="modal fade" id="confirmDelete-@item.Id" tabindex="-1" aria-labelledby="confirmDeleteLabel" aria-hidden="true">
                                            <div class="modal-dialog">
                                                <div class="modal-content">
                                                    <div class="modal-header">
                                                        <h1 class="modal-title fs-5" id="exampleModalLabel">Confirmation</h1>
                                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                                    </div>
                                                    <div class="modal-body">
                                                        Are you sure you want to delete this item? This action is irreversible!
                                                    </div>
                                                    <div class="modal-footer">
                                                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                                        <form asp-controller="Item" asp-action="Delete" asp-route-id="@item.Id" method="post" style="display:inline;">
                                                            <button type="submit" class="btn btn-danger">Confirm deletion</button>
                                                        </form>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="collapse mt-2 indented-content" id="addToWarehouse-@item.Id">
                                            <form asp-controller="Warehouse" asp-action="AddItemToWarehouse" method="post" style="display:inline;">
                                                <div>
                                                    <label for="warehouseSelect-@item.Id">Select Warehouse:</label>
                                                    <select id="warehouseSelect-@item.Id" name="warehouseId" class="form-control">
                                                        @foreach (var warehouse in Model.Warehouses)
                                                        {
                                                            <option value="@warehouse.Id">@warehouse.Name - @warehouse.Company</option>
                                                        }
                                                    </select>
                                                </div>
                                                <div class="mt-2">
                                                    <label for="quantity-@item.Id">Quantity:</label>
                                                    <input type="number" id="quantity-@item.Id" name="quantity" class="form-control" min="1" />
                                                </div>
                                                <input type="hidden" name="itemId" value="@item.Id" />
                                                <div class="mt-2">
                                                    <button type="submit" class="btn btn-primary">Add</button>
                                                    <button type="button" class="btn btn-secondary" data-bs-toggle="collapse" data-bs-target="#addToWarehouse-@item.Id">Cancel</button>
                                                </div>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            </li>
                            index++;
                        }
                    }
                    else
                    {
                        <li class="list-group-item">No items available.</li>
                    }
                </ul>
            </div>
        </div>
    </div>
</div>

<!-- Scripts for collapse and form handling -->
@section Scripts {
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.1/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate-unobtrusive/3.2.11/jquery.validate.unobtrusive.min.js"></script>
    <script>
        $(document).ready(function () {
            var timeout;

            // Show category menu on mouse enter and keep it open on mouse leave
            $('#filterByCategory').on('mouseenter', function () {
                clearTimeout(timeout);
                $('#categoryMenu').show();
            });

            $('#filterByCategory').on('mouseleave', function () {
                timeout = setTimeout(function () {
                    $('#categoryMenu').hide();
                }, 300);
            });

            $('#categoryMenu').on('mouseenter', function () {
                clearTimeout(timeout);
                $(this).show();
            });

            $('#categoryMenu').on('mouseleave', function () {
                $(this).hide();
            });

            // Filter items by category
            $('.dropdown-item[data-filter]').on('click', function () {
                var selectedCategory = $(this).data('filter');
                $('.dropdown-item[data-filter]').find('i').remove(); // Remove existing checkmarks
                $('.dropdown-item[data-filter]').removeClass('active'); // Remove active class from all items
                $(this).prepend('<i class="bi bi-check"></i> '); // Add checkmark to selected item
                $(this).addClass('active'); // Add active class to selected item

                if (selectedCategory === "All") {
                    $('#item-list .list-group-item').show();
                } else {
                    $('#item-list .list-group-item').each(function () {
                        var itemCategory = $(this).data('category');
                        if (itemCategory === selectedCategory) {
                            $(this).show();
                        } else {
                            $(this).hide();
                        }
                    });
                }

                // Reset dropdown state
                $('#filterDropdown').dropdown('toggle');
            });

            // Remove filtering
            $('#removeFiltering').on('click', function () {
                $('.dropdown-item[data-filter]').find('i').remove(); // Remove existing checkmarks
                $('.dropdown-item[data-filter]').removeClass('active'); // Remove active class from all items
                $('#item-list .list-group-item').show(); // Show all items

                // Reset dropdown state
                $('#filterDropdown').dropdown('toggle');
            });
        });
    </script>
}